{"ast":null,"code":"var _jsxFileName = \"/Users/pengjingcheng/Desktop/myproject/github-finder/src/context/github/GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nconst GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUsers = async () => {\n    const response = await fetch(`${REACT_APP_GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${REACT_APP_GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    setUsers(data);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"7VV5U2Js0/PjsYq3k2PJZfNfyyo=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useState","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","users","setUsers","loading","setLoading","fetchUsers","response","fetch","headers","Authorization","data","json"],"sources":["/Users/pengjingcheng/Desktop/myproject/github-finder/src/context/github/GithubContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nconst GithubProvider = ({ children }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchUsers = async () => {\n    const response = await fetch(`${REACT_APP_GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${REACT_APP_GITHUB_TOKEN}`,\n      },\n    });\n    const data = await response.json();\n    setUsers(data);\n    setLoading(false);\n  };\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users,\n        loading,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubContext;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AACA,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;AAEA,MAAMG,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;;AAEA,MAAMC,cAAc,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;EACA,MAAMc,UAAU,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,oBAAqB,QAAzB,EAAkC;MAC5DY,OAAO,EAAE;QACPC,aAAa,EAAG,SAAQX,sBAAuB;MADxC;IADmD,CAAlC,CAA5B;IAKA,MAAMY,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;IACAT,QAAQ,CAACQ,IAAD,CAAR;IACAN,UAAU,CAAC,KAAD,CAAV;EACD,CATD;;EAWA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLH,KADK;MAELE;IAFK,CADT;IAAA,UAMGH;EANH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAxBD;;GAAMD,c;;KAAAA,c;AA0BN,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}